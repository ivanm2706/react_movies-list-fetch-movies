{"version":3,"sources":["api.ts","components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["API_URL","MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","FindMovie","error","preview","isLoading","onFindMovie","addMovie","isPreview","removePreview","isErrorMessage","setErrorMessage","useState","valueInput","setValueInput","htmlFor","type","id","placeholder","value","onChange","e","currentTarget","classNames","disabled","onClick","preventDefault","App","setIsErrorMessage","setIsPreview","setMovies","previewMovie","setPreviewMovie","setIsLoading","query","fetch","then","res","json","catch","Response","Error","Title","Plot","Poster","imdbID","findIndex","state","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d939252b.chunk.js","sourcesContent":["import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_KEY = '953f87d7';\n\nconst API_URL = `https://www.omdbapi.com/?apikey=${API_KEY}`;\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie | null,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie?.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie?.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie?.description}\n        <br />\n        <a href={movie?.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { FC, useState } from 'react';\nimport classNames from 'classnames';\nimport { Movie } from '../../types/Movie';\nimport { MovieCard } from '../MovieCard';\nimport './FindMovie.scss';\n\ntype Props = {\n  error: [boolean, React.Dispatch<React.SetStateAction<boolean>>],\n  preview: [boolean, React.Dispatch<React.SetStateAction<boolean>>],\n  movie: Movie | null,\n  isLoading: boolean,\n  onFindMovie: (value: string) => void,\n  addMovie: () => void,\n};\n\nexport const FindMovie: FC<Props> = ({\n  error,\n  preview,\n  movie,\n  isLoading,\n  onFindMovie,\n  addMovie,\n}) => {\n  const [isPreview, removePreview] = preview;\n  const [isErrorMessage, setErrorMessage] = error;\n  const [valueInput, setValueInput] = useState<string>('');\n\n  const hendlerInput = (e: React.ChangeEvent<HTMLInputElement>) => {\n    setValueInput(e.currentTarget.value);\n    setErrorMessage(false);\n  };\n\n  const hendlerFindMovie = (\n    e: React.MouseEvent<HTMLButtonElement, MouseEvent>,\n  ) => {\n    e.preventDefault();\n    onFindMovie(valueInput);\n  };\n\n  const addMovieToList = () => {\n    setValueInput('');\n    addMovie();\n    removePreview(false);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={valueInput}\n              onChange={hendlerInput}\n            />\n          </div>\n\n          {isErrorMessage && (\n            <p\n              className=\"help is-danger\"\n              data-cy=\"errorMessage\"\n            >\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button\n              data-cy=\"searchButton\"\n              type=\"submit\"\n              className={classNames(\n                'button',\n                'is-light',\n                { 'is-loading': isLoading },\n              )}\n              disabled={valueInput === ''}\n              onClick={hendlerFindMovie}\n            >\n              {!movie ? 'Find a movie' : 'Search again'}\n            </button>\n          </div>\n\n          {isPreview && (\n            <div className=\"control\">\n              <button\n                data-cy=\"addButton\"\n                type=\"button\"\n                className=\"button is-primary\"\n                onClick={addMovieToList}\n              >\n                Add to the list\n              </button>\n            </div>\n          )}\n\n        </div>\n      </form>\n\n      {isPreview && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie || null} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport { getMovie } from './api';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const error = useState<boolean>(false);\n  const [, setIsErrorMessage] = error;\n  const preview = useState<boolean>(false);\n  const [, setIsPreview] = preview;\n\n  const [movies, setMovies] = useState<Movie[]>([]);\n  const [previewMovie, setPreviewMovie] = useState<Movie | null>(null);\n  const [isLoading, setIsLoading] = useState(false);\n\n  const findMoviePreview = (value: string) => {\n    setIsLoading(true);\n    getMovie(value)\n      .then((movie) => {\n        if ('Error' in movie) {\n          throw new Error(movie.Error);\n        }\n\n        setPreviewMovie({\n          title: movie.Title,\n          description: movie.Plot,\n          imgUrl: movie.Poster === 'N/A'\n            ? 'https://via.placeholder.com/360x270.png?text=no%20preview'\n            : movie.Poster,\n          imdbUrl: `https://www.imdb.com/title/${movie.imdbID}`,\n          imdbId: movie.imdbID,\n        });\n        setIsPreview(true);\n        setIsLoading(false);\n      })\n      .catch(() => {\n        setIsPreview(false);\n        setIsErrorMessage(true);\n        setIsLoading(false);\n      });\n  };\n\n  const addMovieToList = () => {\n    if (\n      previewMovie\n      && movies.findIndex(({ imdbId }) => imdbId === previewMovie.imdbId) < 0\n    ) {\n      setMovies(state => [...state, previewMovie]);\n    }\n\n    setPreviewMovie(null);\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie\n          movie={previewMovie}\n          isLoading={isLoading}\n          onFindMovie={findMoviePreview}\n          addMovie={addMovieToList}\n          error={error}\n          preview={preview}\n        />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}